<!-- Treasury Tools Galaxy - WordPress.com Custom HTML Block Optimized Version -->
<!-- Fully self-contained with enhanced WordPress.com compatibility -->
<div id="treasury-galaxy-wp" style="
    width: 100%;
    height: 600px;
    min-height: 500px;
    position: relative;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-radius: 12px;
    overflow: hidden;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    margin: 20px 0;
">
    <!-- Loading Screen -->
    <div id="loading-screen-wp" style="
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        z-index: 10;
    ">
        <h2 style="margin-bottom: 20px; font-size: clamp(1.5rem, 4vw, 2.2rem); text-align: center; font-weight: 700;">Treasury Tools Galaxy</h2>
        <p style="margin-bottom: 25px; font-size: clamp(0.9rem, 2.5vw, 1.1rem); text-align: center; opacity: 0.9;">Interactive 3D visualization loading...</p>
        <div style="
            width: 50px;
            height: 50px;
            border: 4px solid rgba(255, 255, 255, 0.3);
            border-top: 4px solid white;
            border-radius: 50%;
            animation: spin-wp 1.2s linear infinite;
        "></div>
    </div>

    <!-- Main Canvas -->
    <canvas id="galaxy-canvas-wp" style="
        width: 100%;
        height: 100%;
        display: none;
        cursor: grab;
        touch-action: none;
    "></canvas>

    <!-- Controls Overlay -->
    <div id="controls-overlay-wp" style="
        position: absolute;
        top: 15px;
        left: 15px;
        background: rgba(255, 255, 255, 0.95);
        padding: 12px 16px;
        border-radius: 12px;
        color: #1f2937;
        font-size: 0.85rem;
        line-height: 1.4;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        display: none;
        z-index: 5;
    ">
        <div style="font-weight: 700; color: #3b82f6; margin-bottom: 6px; font-size: 0.95rem;">🌌 Treasury Galaxy</div>
        <div><strong>🖱️ Drag:</strong> Rotate view</div>
        <div><strong>🔍 Scroll:</strong> Zoom in/out</div>
        <div><strong>👆 Click:</strong> Explore tools</div>
    </div>

    <!-- Action Buttons -->
    <div id="action-buttons-wp" style="
        position: absolute;
        bottom: 15px;
        left: 15px;
        display: none;
        gap: 8px;
        z-index: 5;
    ">
        <button onclick="resetView()" style="
            background: linear-gradient(45deg, #3b82f6, #1d4ed8);
            color: white;
            border: none;
            padding: 10px 14px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 0.8rem;
            font-weight: 600;
            box-shadow: 0 2px 10px rgba(59, 130, 246, 0.3);
            transition: all 0.2s ease;
        ">🏠 Reset</button>
        <button onclick="toggleAutoRotate()" style="
            background: linear-gradient(45deg, #10b981, #047857);
            color: white;
            border: none;
            padding: 10px 14px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 0.8rem;
            font-weight: 600;
            box-shadow: 0 2px 10px rgba(16, 185, 129, 0.3);
            transition: all 0.2s ease;
        ">⏯️ Auto</button>
    </div>

    <!-- Categories Panel -->
    <div id="categories-panel-wp" style="
        position: absolute;
        top: 15px;
        right: 15px;
        background: rgba(255, 255, 255, 0.95);
        padding: 16px;
        border-radius: 12px;
        min-width: 220px;
        max-width: 280px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        display: none;
        z-index: 5;
    ">
        <h3 style="margin: 0 0 14px 0; color: #1f2937; font-size: 1.1rem; font-weight: 700; text-align: center;">Treasury Categories</h3>
        
        <div class="category-item" onclick="showCategory('TRMS')" style="
            background: linear-gradient(135deg, #3b82f6, #1d4ed8);
            color: white;
            padding: 12px;
            border-radius: 10px;
            margin-bottom: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
        ">
            <div style="font-weight: 700; font-size: 0.9rem; margin-bottom: 2px;">🏢 Treasury & Risk Management</div>
            <div style="font-size: 0.75rem; opacity: 0.9;">10 Enterprise Solutions</div>
        </div>
        
        <div class="category-item" onclick="showCategory('CASH')" style="
            background: linear-gradient(135deg, #0ea5e9, #0284c7);
            color: white;
            padding: 12px;
            border-radius: 10px;
            margin-bottom: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
        ">
            <div style="font-weight: 700; font-size: 0.9rem; margin-bottom: 2px;">💰 Cash Management Tools</div>
            <div style="font-size: 0.75rem; opacity: 0.9;">10 Specialized Solutions</div>
        </div>
        
        <div class="category-item" onclick="showCategory('LITE')" style="
            background: linear-gradient(135deg, #10b981, #047857);
            color: white;
            padding: 12px;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
        ">
            <div style="font-weight: 700; font-size: 0.9rem; margin-bottom: 2px;">⚡ TMS-Lite Platforms</div>
            <div style="font-size: 0.75rem; opacity: 0.9;">7 Mid-Market Tools</div>
        </div>
    </div>

    <!-- Info Display -->
    <div id="tool-info-wp" style="
        position: absolute;
        bottom: 15px;
        right: 15px;
        background: rgba(255, 255, 255, 0.95);
        padding: 14px;
        border-radius: 12px;
        max-width: 280px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        opacity: 0;
        transition: opacity 0.3s ease;
        z-index: 5;
    ">
        <h4 id="tool-name-wp" style="margin: 0 0 6px 0; color: #3b82f6; font-size: 1rem; font-weight: 700;">Treasury Tool</h4>
        <p id="tool-desc-wp" style="margin: 0; color: #4b5563; font-size: 0.85rem; line-height: 1.4;">Click any treasury tool to learn more</p>
    </div>

    <!-- Category Modal -->
    <div id="category-modal-wp" style="
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.75);
        display: none;
        align-items: center;
        justify-content: center;
        z-index: 100;
        backdrop-filter: blur(5px);
    ">
        <div style="
            background: white;
            border-radius: 16px;
            padding: 0;
            max-width: min(900px, 95vw);
            max-height: 90vh;
            overflow: hidden;
            box-shadow: 0 25px 80px rgba(0, 0, 0, 0.4);
            position: relative;
        ">
            <!-- Modal Header -->
            <div id="modal-header-wp" style="
                background: linear-gradient(135deg, #3b82f6, #1d4ed8);
                color: white;
                padding: 24px;
                position: relative;
            ">
                <h2 id="modal-title-wp" style="margin: 0 0 6px 0; font-size: 1.6rem; font-weight: 700;">Category Title</h2>
                <p id="modal-subtitle-wp" style="margin: 0; opacity: 0.9; font-size: 1rem;">Subtitle</p>
                <button onclick="closeModal()" style="
                    position: absolute;
                    top: 20px;
                    right: 24px;
                    background: rgba(255, 255, 255, 0.2);
                    border: none;
                    color: white;
                    width: 36px;
                    height: 36px;
                    border-radius: 50%;
                    cursor: pointer;
                    font-size: 18px;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    transition: background 0.2s ease;
                ">×</button>
            </div>
            
            <!-- Modal Content -->
            <div style="padding: 24px; max-height: 60vh; overflow-y: auto;">
                <div id="modal-content-wp"></div>
            </div>
        </div>
    </div>

    <style>
        @keyframes spin-wp {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        #treasury-galaxy-wp button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
        }
        
        #treasury-galaxy-wp .category-item:hover {
            transform: translateY(-2px) scale(1.02);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
        }
        
        #treasury-galaxy-wp canvas:active {
            cursor: grabbing;
        }
        
        .tool-card {
            background: #f8fafc;
            border: 2px solid #e2e8f0;
            border-radius: 12px;
            padding: 16px;
            margin-bottom: 12px;
            transition: all 0.3s ease;
        }
        
        .tool-card:hover {
            border-color: #3b82f6;
            box-shadow: 0 4px 20px rgba(59, 130, 246, 0.1);
            transform: translateY(-2px);
        }
        
        .tool-card h3 {
            margin: 0 0 8px 0;
            color: #1e293b;
            font-size: 1.1rem;
            font-weight: 700;
        }
        
        .tool-card p {
            margin: 0;
            color: #64748b;
            font-size: 0.9rem;
            line-height: 1.5;
        }
        
        @media (max-width: 768px) {
            #categories-panel-wp {
                position: fixed;
                top: auto;
                bottom: 80px;
                left: 15px;
                right: 15px;
                min-width: auto;
                max-width: none;
            }
            
            #controls-overlay-wp {
                font-size: 0.8rem;
                padding: 10px 12px;
            }
            
            #action-buttons-wp {
                flex-direction: column;
            }
        }
    </style>
</div>

<script>
// Treasury Tools Galaxy - WordPress.com Optimized
(function() {
    'use strict';
    
    // Configuration
    const CONFIG = {
        canvasId: 'galaxy-canvas-wp',
        containerId: 'treasury-galaxy-wp',
        loadingTimeout: 10000,
        enableAutoRotate: true,
        rotationSpeed: 0.003,
        cameraDistance: 12
    };
    
    // Treasury Tools Data
    const TREASURY_TOOLS = [
        // TRMS Category
        { name: 'Kyriba', category: 'TRMS', color: 0x3b82f6, desc: 'Leading cloud-based treasury and risk management platform with AI-powered analytics and comprehensive derivatives management.' },
        { name: 'GTreasury', category: 'TRMS', color: 0x3b82f6, desc: 'Enterprise treasury platform with strong accounting integration, advanced reporting, and multi-entity consolidation.' },
        { name: 'Reval', category: 'TRMS', color: 0x3b82f6, desc: 'Comprehensive treasury and risk solutions with sophisticated derivatives management and hedge accounting.' },
        { name: 'Quantum', category: 'TRMS', color: 0x3b82f6, desc: 'Advanced treasury management system with real-time risk analytics and hedging optimization capabilities.' },
        { name: 'WallStreet Suite', category: 'TRMS', color: 0x3b82f6, desc: 'Complete treasury and risk platform with advanced analytics, multi-asset support, and regulatory reporting.' },
        { name: 'ATOM', category: 'TRMS', color: 0x3b82f6, desc: 'Advanced treasury platform with comprehensive derivatives trading and sophisticated risk management tools.' },
        { name: 'Integrity', category: 'TRMS', color: 0x3b82f6, desc: 'Enterprise treasury solution with robust compliance features and comprehensive workflow management.' },
        { name: 'IT2', category: 'TRMS', color: 0x3b82f6, desc: 'Integrated treasury technology platform with comprehensive cash management and risk analytics.' },
        { name: 'Datalog', category: 'TRMS', color: 0x3b82f6, desc: 'Treasury management system with advanced analytics, multi-entity support, and comprehensive reporting.' },
        { name: 'Coupa', category: 'TRMS', color: 0x3b82f6, desc: 'Business spend management platform with integrated treasury operations and procurement workflows.' },
        
        // Cash Tools Category
        { name: 'Trovata', category: 'CASH', color: 0x0ea5e9, desc: 'AI-powered cash visibility platform with real-time bank connectivity and predictive analytics.' },
        { name: 'Tesorio', category: 'CASH', color: 0x0ea5e9, desc: 'Cash flow optimization platform with machine learning insights and automated forecasting.' },
        { name: 'Autocash.ai', category: 'CASH', color: 0x0ea5e9, desc: 'AI-powered cash management with predictive analytics and automated scenario planning.' },
        { name: 'Balance', category: 'CASH', color: 0x0ea5e9, desc: 'Real-time cash visibility platform with automated bank reconciliation and multi-currency support.' },
        { name: 'Nilus', category: 'CASH', color: 0x0ea5e9, desc: 'Cash positioning and forecasting platform with advanced scenario planning and variance analysis.' },
        { name: 'Obol', category: 'CASH', color: 0x0ea5e9, desc: 'Digital treasury platform with real-time cash visibility and liquidity optimization features.' },
        { name: 'Panax', category: 'CASH', color: 0x0ea5e9, desc: 'Working capital optimization platform with cash flow forecasting and payment timing analytics.' },
        { name: 'Statement', category: 'CASH', color: 0x0ea5e9, desc: 'Bank statement processing platform with automated data extraction and reconciliation.' },
        { name: 'Treasury Suite', category: 'CASH', color: 0x0ea5e9, desc: 'Comprehensive cash management suite with forecasting, positioning, and liquidity optimization.' },
        { name: 'Vesto', category: 'CASH', color: 0x0ea5e9, desc: 'Cash investment platform with yield optimization, risk monitoring, and liquidity management.' },
        
        // TMS-Lite Category
        { name: 'Treasury4', category: 'LITE', color: 0x10b981, desc: 'Next-generation treasury platform with modern UI, cloud-native architecture, and intuitive workflows.' },
        { name: 'Treasura', category: 'LITE', color: 0x10b981, desc: 'User-friendly treasury management system with essential cash and risk management features.' },
        { name: 'Treasury Cube', category: 'LITE', color: 0x10b981, desc: 'Modular treasury platform with customizable features for growing treasury operations.' },
        { name: 'Treasury Curve', category: 'LITE', color: 0x10b981, desc: 'Simplified treasury management solution with intuitive interface and core functionality.' },
        { name: 'Bottomline', category: 'LITE', color: 0x10b981, desc: 'Payment automation and cash management platform with strong banking integration.' },
        { name: 'City Financials', category: 'LITE', color: 0x10b981, desc: 'Streamlined treasury system designed for mid-market companies and growth businesses.' },
        { name: 'HighRadius', category: 'LITE', color: 0x10b981, desc: 'Autonomous finance platform with AI capabilities for accounts receivable and treasury.' }
    ];
    
    const CATEGORIES = {
        TRMS: {
            title: 'Treasury & Risk Management Systems',
            subtitle: 'Enterprise-Grade Platforms',
            description: 'Comprehensive treasury management platforms designed for large enterprises with complex operations, including sophisticated risk management, derivatives trading, and multi-entity consolidation.',
            color: '#3b82f6'
        },
        CASH: {
            title: 'Cash Management Tools',
            subtitle: 'Specialized Visibility & Forecasting',
            description: 'Focused solutions for cash visibility, forecasting, and liquidity management. These tools excel at providing real-time cash positions and predictive analytics.',
            color: '#0ea5e9'
        },
        LITE: {
            title: 'TMS-Lite Solutions',
            subtitle: 'Streamlined Treasury Platforms',
            description: 'Simplified treasury management systems providing core functionality without enterprise complexity. Perfect for mid-market companies and growing businesses.',
            color: '#10b981'
        }
    };
    
    // Global variables
    let scene, camera, renderer, toolsGroup, raycaster, mouse;
    let isAutoRotating = true;
    let isDragging = false;
    let previousMousePosition = { x: 0, y: 0 };
    
    // Initialize when DOM is ready
    function init() {
        console.log('Initializing Treasury Galaxy...');
        
        // Try to load Three.js
        if (typeof THREE === 'undefined') {
            loadThreeJS();
        } else {
            setupGalaxy();
        }
    }
    
    function loadThreeJS() {
        const script = document.createElement('script');
        script.src = 'https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js';
        script.crossOrigin = 'anonymous';
        script.onload = setupGalaxy;
        script.onerror = showFallback;
        document.head.appendChild(script);
        
        // Fallback timeout
        setTimeout(() => {
            if (typeof THREE === 'undefined') {
                showFallback();
            }
        }, CONFIG.loadingTimeout);
    }
    
    function setupGalaxy() {
        try {
            console.log('Setting up 3D galaxy...');
            
            const container = document.getElementById(CONFIG.containerId);
            const canvas = document.getElementById(CONFIG.canvasId);
            
            if (!container || !canvas) {
                showFallback();
                return;
            }
            
            // Scene setup
            scene = new THREE.Scene();
            camera = new THREE.PerspectiveCamera(75, container.offsetWidth / container.offsetHeight, 0.1, 1000);
            camera.position.set(0, 0, CONFIG.cameraDistance);
            
            // Renderer setup
            renderer = new THREE.WebGLRenderer({ 
                canvas: canvas, 
                antialias: true, 
                alpha: true 
            });
            renderer.setSize(container.offsetWidth, container.offsetHeight);
            renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));
            renderer.setClearColor(0x000000, 0);
            
            // Create galaxy components
            toolsGroup = new THREE.Group();
            scene.add(toolsGroup);
            
            createWireframeSphere();
            createToolNodes();
            createStarField();
            setupLighting();
            setupInteraction();
            
            // Show galaxy
            document.getElementById('loading-screen-wp').style.display = 'none';
            canvas.style.display = 'block';
            document.getElementById('controls-overlay-wp').style.display = 'block';
            document.getElementById('action-buttons-wp').style.display = 'flex';
            document.getElementById('categories-panel-wp').style.display = 'block';
            
            // Start animation
            animate();
            
            console.log('Treasury Galaxy initialized successfully!');
            
        } catch (error) {
            console.error('Error setting up galaxy:', error);
            showFallback();
        }
    }
    
    function createWireframeSphere() {
        const geometry = new THREE.SphereGeometry(5, 32, 32);
        const material = new THREE.MeshBasicMaterial({
            color: 0xffffff,
            wireframe: true,
            transparent: true,
            opacity: 0.1
        });
        const sphere = new THREE.Mesh(geometry, material);
        toolsGroup.add(sphere);
    }
    
    function createToolNodes() {
        const radius = 5.5;
        const phi = Math.PI * (3 - Math.sqrt(5)); // Golden angle
        
        TREASURY_TOOLS.forEach((tool, index) => {
            const y = 1 - (index / (TREASURY_TOOLS.length - 1)) * 2;
            const radiusAtY = Math.sqrt(1 - y * y);
            const theta = phi * index;
            
            const x = Math.cos(theta) * radiusAtY * radius;
            const z = Math.sin(theta) * radiusAtY * radius;
            
            // Create tool sphere
            const geometry = new THREE.SphereGeometry(0.15, 16, 16);
            const material = new THREE.MeshPhongMaterial({
                color: tool.color,
                emissive: tool.color,
                emissiveIntensity: 0.2
            });
            
            const mesh = new THREE.Mesh(geometry, material);
            mesh.position.set(x, y * radius, z);
            mesh.userData = tool;
            
            // Create text label
            const textTexture = createTextTexture(tool.name);
            const textMaterial = new THREE.SpriteMaterial({ 
                map: textTexture, 
                transparent: true 
            });
            const textSprite = new THREE.Sprite(textMaterial);
            textSprite.scale.set(2, 0.5, 1);
            textSprite.position.copy(mesh.position);
            textSprite.position.multiplyScalar(1.2);
            textSprite.userData = tool;
            
            toolsGroup.add(mesh);
            toolsGroup.add(textSprite);
        });
    }
    
    function createTextTexture(text) {
        const canvas = document.createElement('canvas');
        const context = canvas.getContext('2d');
        canvas.width = 256;
        canvas.height = 64;
        
        context.fillStyle = '#ffffff';
        context.strokeStyle = '#000000';
        context.lineWidth = 2;
        context.font = 'bold 16px Arial';
        context.textAlign = 'center';
        
        context.strokeText(text, 128, 40);
        context.fillText(text, 128, 40);
        
        return new THREE.CanvasTexture(canvas);
    }
    
    function createStarField() {
        const geometry = new THREE.BufferGeometry();
        const starCount = 500;
        const positions = new Float32Array(starCount * 3);
        
        for (let i = 0; i < starCount; i++) {
            positions[i * 3] = (Math.random() - 0.5) * 100;
            positions[i * 3 + 1] = (Math.random() - 0.5) * 100;
            positions[i * 3 + 2] = (Math.random() - 0.5) * 100;
        }
        
        geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));
        
        const material = new THREE.PointsMaterial({ 
            color: 0xffffff, 
            size: 0.5,
            transparent: true,
            opacity: 0.8
        });
        
        const stars = new THREE.Points(geometry, material);
        scene.add(stars);
    }
    
    function setupLighting() {
        const ambientLight = new THREE.AmbientLight(0x404040, 0.6);
        scene.add(ambientLight);
        
        const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);
        directionalLight.position.set(1, 1, 1);
        scene.add(directionalLight);
        
        const pointLight = new THREE.PointLight(0x3b82f6, 0.5, 50);
        pointLight.position.set(10, 10, 10);
        scene.add(pointLight);
    }
    
    function setupInteraction() {
        raycaster = new THREE.Raycaster();
        mouse = new THREE.Vector2();
        
        const canvas = document.getElementById(CONFIG.canvasId);
        
        // Mouse events
        canvas.addEventListener('mousedown', onMouseDown);
        canvas.addEventListener('mousemove', onMouseMove);
        canvas.addEventListener('mouseup', onMouseUp);
        canvas.addEventListener('click', onMouseClick);
        canvas.addEventListener('wheel', onMouseWheel);
        
        // Touch events
        canvas.addEventListener('touchstart', onTouchStart);
        canvas.addEventListener('touchmove', onTouchMove);
        canvas.addEventListener('touchend', onTouchEnd);
    }
    
    function onMouseDown(event) {
        isDragging = true;
        const rect = event.target.getBoundingClientRect();
        previousMousePosition = {
            x: event.clientX - rect.left,
            y: event.clientY - rect.top
        };
    }
    
    function onMouseMove(event) {
        if (isDragging) {
            const rect = event.target.getBoundingClientRect();
            const mousePos = {
                x: event.clientX - rect.left,
                y: event.clientY - rect.top
            };
            
            const deltaMove = {
                x: mousePos.x - previousMousePosition.x,
                y: mousePos.y - previousMousePosition.y
            };
            
            toolsGroup.rotation.y += deltaMove.x * 0.01;
            toolsGroup.rotation.x += deltaMove.y * 0.01;
            
            previousMousePosition = mousePos;
        }
    }
    
    function onMouseUp() {
        isDragging = false;
    }
    
    function onMouseClick(event) {
        if (!isDragging) {
            const rect = event.target.getBoundingClientRect();
            mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;
            mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;
            
            raycaster.setFromCamera(mouse, camera);
            const intersects = raycaster.intersectObjects(toolsGroup.children);
            
            if (intersects.length > 0) {
                const tool = intersects[0].object.userData;
                if (tool && tool.name) {
                    showToolInfo(tool);
                }
            }
        }
    }
    
    function onMouseWheel(event) {
        event.preventDefault();
        const scaleFactor = event.deltaY > 0 ? 1.1 : 0.9;
        camera.position.multiplyScalar(scaleFactor);
        camera.position.clampLength(6, 25);
    }
    
    function onTouchStart(event) {
        event.preventDefault();
        if (event.touches.length === 1) {
            isDragging = true;
            const rect = event.target.getBoundingClientRect();
            previousMousePosition = {
                x: event.touches[0].clientX - rect.left,
                y: event.touches[0].clientY - rect.top
            };
        }
    }
    
    function onTouchMove(event) {
        event.preventDefault();
        if (event.touches.length === 1 && isDragging) {
            const rect = event.target.getBoundingClientRect();
            const touchPos = {
                x: event.touches[0].clientX - rect.left,
                y: event.touches[0].clientY - rect.top
            };
            
            const deltaMove = {
                x: touchPos.x - previousMousePosition.x,
                y: touchPos.y - previousMousePosition.y
            };
            
            toolsGroup.rotation.y += deltaMove.x * 0.01;
            toolsGroup.rotation.x += deltaMove.y * 0.01;
            
            previousMousePosition = touchPos;
        }
    }
    
    function onTouchEnd(event) {
        event.preventDefault();
        isDragging = false;
    }
    
    function showToolInfo(tool) {
        const infoPanel = document.getElementById('tool-info-wp');
        document.getElementById('tool-name-wp').textContent = tool.name;
        document.getElementById('tool-desc-wp').textContent = tool.desc;
        infoPanel.style.opacity = '1';
        
        setTimeout(() => {
            infoPanel.style.opacity = '0';
        }, 5000);
    }
    
    function animate() {
        requestAnimationFrame(animate);
        
        if (isAutoRotating && !isDragging) {
            toolsGroup.rotation.y += CONFIG.rotationSpeed;
        }
        
        renderer.render(scene, camera);
    }
    
    function showFallback() {
        console.log('Showing fallback content...');
        document.getElementById('loading-screen-wp').innerHTML = `
            <h2 style="margin-bottom: 20px; font-size: clamp(1.5rem, 4vw, 2rem); text-align: center; font-weight: 700;">Treasury Tools Catalog</h2>
            <p style="margin-bottom: 20px; font-size: clamp(0.9rem, 2.5vw, 1rem); text-align: center; opacity: 0.9;">3D visualization unavailable. Browse our complete catalog below:</p>
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); gap: 16px; max-width: 900px; margin-top: 30px;">
                <div style="background: rgba(255, 255, 255, 0.95); padding: 16px; border-radius: 12px; border-left: 4px solid #3b82f6;">
                    <h3 style="color: #3b82f6; margin-bottom: 8px; font-size: 1.1rem;">🏢 Treasury & Risk Management (10)</h3>
                    <p style="color: #374151; font-size: 0.85rem; line-height: 1.4; margin: 0;">Kyriba, GTreasury, Reval, Quantum, WallStreet Suite, ATOM, Integrity, IT2, Datalog, Coupa</p>
                </div>
                <div style="background: rgba(255, 255, 255, 0.95); padding: 16px; border-radius: 12px; border-left: 4px solid #0ea5e9;">
                    <h3 style="color: #0ea5e9; margin-bottom: 8px; font-size: 1.1rem;">💰 Cash Management Tools (10)</h3>
                    <p style="color: #374151; font-size: 0.85rem; line-height: 1.4; margin: 0;">Trovata, Tesorio, Autocash.ai, Balance, Nilus, Obol, Panax, Statement, Treasury Suite, Vesto</p>
                </div>
                <div style="background: rgba(255, 255, 255, 0.95); padding: 16px; border-radius: 12px; border-left: 4px solid #10b981;">
                    <h3 style="color: #10b981; margin-bottom: 8px; font-size: 1.1rem;">⚡ TMS-Lite Solutions (7)</h3>
                    <p style="color: #374151; font-size: 0.85rem; line-height: 1.4; margin: 0;">Treasury4, Treasura, Treasury Cube, Treasury Curve, Bottomline, City Financials, HighRadius</p>
                </div>
            </div>
        `;
    }
    
    // Global functions for controls
    window.resetView = function() {
        if (camera && toolsGroup) {
            camera.position.set(0, 0, CONFIG.cameraDistance);
            toolsGroup.rotation.set(0, 0, 0);
        }
    };
    
    window.toggleAutoRotate = function() {
        isAutoRotating = !isAutoRotating;
    };
    
    window.showCategory = function(category) {
        const categoryData = CATEGORIES[category];
        const tools = TREASURY_TOOLS.filter(tool => tool.category === category);
        
        document.getElementById('modal-title-wp').textContent = categoryData.title;
        document.getElementById('modal-subtitle-wp').textContent = categoryData.subtitle;
        document.getElementById('modal-header-wp').style.background = `linear-gradient(135deg, ${categoryData.color}, ${adjustColor(categoryData.color, -30)})`;
        
        let content = `<div style="margin-bottom: 20px; padding: 16px; background: #f8fafc; border-radius: 12px; border-left: 4px solid ${categoryData.color};">
            <p style="margin: 0; color: #475569; line-height: 1.6;">${categoryData.description}</p>
        </div>`;
        
        tools.forEach(tool => {
            content += `<div class="tool-card">
                <h3>${tool.name}</h3>
                <p>${tool.desc}</p>
            </div>`;
        });
        
        document.getElementById('modal-content-wp').innerHTML = content;
        document.getElementById('category-modal-wp').style.display = 'flex';
        document.body.style.overflow = 'hidden';
    };
    
    window.closeModal = function() {
        document.getElementById('category-modal-wp').style.display = 'none';
        document.body.style.overflow = 'auto';
    };
    
    function adjustColor(hex, amount) {
        const num = parseInt(hex.replace('#', ''), 16);
        const r = Math.max(0, Math.min(255, (num >> 16) + amount));
        const g = Math.max(0, Math.min(255, (num >> 8 & 0x00FF) + amount));
        const b = Math.max(0, Math.min(255, (num & 0x0000FF) + amount));
        return `#${((r << 16) | (g << 8) | b).toString(16).padStart(6, '0')}`;
    }
    
    // Resize handler
    function handleResize() {
        if (camera && renderer) {
            const container = document.getElementById(CONFIG.containerId);
            if (container) {
                camera.aspect = container.offsetWidth / container.offsetHeight;
                camera.updateProjectionMatrix();
                renderer.setSize(container.offsetWidth, container.offsetHeight);
            }
        }
    }
    
    // Event listeners
    window.addEventListener('resize', handleResize);
    
    // Modal close on outside click
    document.addEventListener('click', function(event) {
        const modal = document.getElementById('category-modal-wp');
        if (event.target === modal) {
            closeModal();
        }
    });
    
    // Keyboard controls
    document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape') {
            closeModal();
        }
    });
    
    // Initialize when ready
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
    } else {
        init();
    }
    
})();
</script>
